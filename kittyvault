#!/bin/bash

set -euo pipefail

# --------------------------------------------------------------------------------------------
# kittyvault â€” Usb encrypter using veracrypt
# --------------------------------------------------------------------------------------------

SELECTED_DISK=""
DEPENDENCIES=("lolcat" "veracrypt")

# User input ---------------------------------------------------------------------------------

get_number() {
    local num
    local valid_num=false
    while [[ "$valid_num" == false ]]; do
        read -p " > " num
        if [[ "$num" =~ ^[0-9]+$ ]] && ((num >= 0 && num < $1)); then
            echo "$num"
            valid_num=true
        else
            echo "Invalid input. Please enter a number from 0 to $(($1 - 1))"
        fi
    done
}

# Functions ----------------------------------------------------------------------------------

print_header() {
    cat <<\EOF | lolcat
   __ ___ __  __      _   __          ____
  / //_(_) /_/ /___ _| | / /__ ___ __/ / /_
 / ,< / / __/ __/ // / |/ / _ `/ // / / __/
/_/|_/_/\__/\__/\_, /|___/\_,_/\_,_/_/\__/
               /___/

EOF
}

ensure_installed() {
    if ! command -v "$1" >/dev/null 2>&1; then
        echo "Missing dependency: $1"
        exit 1
    fi
}

ensure_set() {
    if [[ -z "$1" ]]; then
        echo "FATAL: $2 is not set!"
        exit 1
    fi
}

select_disk() {
    disks=($(diskutil list | grep "external" | awk '{print $1}' || true))
    if [[ ${#disks[@]} -eq 0 ]]; then
        echo "No external disks found..."
        exit 1
    fi
    echo "Select target disk:"
    for ((i = 0; i < ${#disks[@]}; i++)); do
        item="${disks[$i]}"
        echo "  $i) $item ($(diskutil info "$item" | grep "Disk Size:" | awk '{print $3  $4}'))"
    done
    index=$(get_number ${#disks[@]})
    SELECTED_DISK=${disks[$index]}
}

# --------------------------------------------------------------------------------------------
# Dependencies -------------------------------------------------------------------------------

for dep in "${DEPENDENCIES[@]}"; do
    ensure_installed "$dep"
done

# Permissions --------------------------------------------------------------------------------

print_header
if [[ $EUID -ne 0 ]]; then
    echo "Kittyvault needs to be ran using sudo!" >&2
    exit 1
fi

# Parameters ---------------------------------------------------------------------------------

select_disk
echo "Selected disk $SELECTED_DISK"
read -s -p "Enter vault password: " password
echo ""

# Value check --------------------------------------------------------------------------------

ensure_set "$SELECTED_DISK" "Target disk"
ensure_set "$password" "Password"

# Veracrypt ----------------------------------------------------------------------------------

echo "--- Veracrypt --- "
veracrypt --text --create \
    "$SELECTED_DISK" \
    --volume-type normal \
    --encryption AES \
    --hash SHA-512 \
    --filesystem exFAT \
    --password "$password" \
    --quick \
    --non-interactive
echo "--- Veracrypt --- "
